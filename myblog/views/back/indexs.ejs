<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0" name="viewport"/>
	<title>Slim。的后台管理系统</title>
	<link rel="stylesheet" href="/stylesheets/animate.min.css">
	<link rel="stylesheet" href="/stylesheets/bootstrap.min.css">
	<link rel="stylesheet" href="/stylesheets/backindex.css">
	<link rel="shortcut icon" href="/images/favicon.ico">
</head>
<body>
	<div ng-app="myApp">
		<div class="navbar">
			<div class="navbar-inner">
				<button type="button" data-toggle="collapse" data-target="#example-navbar-collapse" class="navbar-toggle animated flip" ng-controller="buttonControl">
					<!-- <span class="sr-only"></span> -->
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
					<span class="icon-bar"></span>
				</button>
				<a href="javascript: location.href='/users/indexs'" class="navbar-brand">Slim。的后台管理系统</a>
				<div class="headerright" ng-controller="headerControl">
					<span>{{date | date : "yyyy-MM-dd HH:mm:ss"}}</span>
					<span class="welcome">欢迎回来！</span>
					<span ng-bind="username"></span>
					<a href="/users/logout" class="logouts btn btn-default">退出</a>
				</div>
			</div>
		</div>
		<div class="ch-container">
			<div class="row">
				<div class="col-sm-2 col-lg-2">
					<div class="sidebar-nav">
						<div class="nav-canvas" ng-controller="navCtrl">
							<ul class="navbar-collapse collapse nav main-menu" id="example-navbar-collapse">
								<li ng-repeat="item in list" class="bigli">
									<div ng-bind="item.title" class="titles"></div>
									<ul class="nav main-menu">
										<li ng-repeat="childItem in item.childList" class="smallli">
											<a ng-href="{{childItem.link}}" ng-bind="childItem.title" ng-class="{smalllisel:childItem.classnames}" ng-click="Show(childItem)"></a>
										</li>
									</ul>
								</li>
							</ul>
						</div>
					</div>
				</div>
				<div id="content" class="col-sm-10 col-lg-10" ng-view></div>
			</div>
		</div>
	</div>
	<script src="/javascripts/angular.min.js"></script>
	<script src="/javascripts/angular-route.min.js"></script>
	<script src="/javascripts/jquery.min.js"></script>
	<script src="/javascripts/bootstrap.min.js"></script>
	<script type="text/javascript" charset="utf-8" src="/ueditor/ueditor.config.js"></script>
    <script type="text/javascript" charset="utf-8" src="/ueditor/ueditor.all.min.js"> </script>
    <script type="text/javascript" charset="utf-8" src="/ueditor/lang/zh-cn/zh-cn.js"> </script>
	<script>
		var app = angular.module("myApp", ["ngRoute"]);

		app.config(["$locationProvider",function($locationProvider) {
			$locationProvider.hashPrefix("");
		}]);

		app.config(function($routeProvider) {

			//配置用户模块路由，用户模块应该有三个路由，创建用户，用户详情，用户列表
			$routeProvider
			.when("/", {
				templateUrl: "/templates/index.html",
				controller: "indexCtrl"
			})
			.when("/createuser", {
				templateUrl: "/templates/user/create.html",
				controller: "createUserCtrl"
			})
			.when("/userinfo", {
				templateUrl: "/templates/user/info.html",
				controller: "userInfoCtrl"
			})
			.when("/phoneuserlist/:pageNum", {
				templateUrl: "/templates/user/list.html",
				controller: "userListCtrl"
			})
			.when("/webuserlist/:pageNum", {
				templateUrl: "/templates/user/lists.html",
				controller: "usersListCtrl"
			})
			//配置文章模块路由，文章模块应该有三个路由，创建文章，文章详情，文章列表
			.when("/createarticle", {
				templateUrl: "/templates/articles/create.html",
				controller: "createArticleCtrl"
			})
			.when("/blogbanners", {
				templateUrl: "/templates/articles/blogbanner.html",
				controller: "blogbannersCtrl"
			})
			.when("/articlelist/:pageNum", {
				templateUrl: "/templates/articles/info.html",
				controller: "articleListCtrl"
			})
			.when("/articleinfo/:articleId", {
				templateUrl: "/templates/articles/list.html",
				controller: "articleInfoCtrl"
			})
			.when("/myskill", {
				templateUrl: "/templates/resumes/myskill.html",
				controller: "myskillCtrl"
			})
			.when("/reviseskill", {
				templateUrl: "/templates/resumes/reviseskill.html",
				controller: "reviseskillCtrl"
			})
			.when("/showskill", {
				templateUrl: "/templates/resumes/showskill.html",
				controller: "showskillCtrl"
			})
		});

		//首页控制器
		app.controller("indexCtrl", function($scope) {

		});

		//创建用户控制器
		app.controller("createUserCtrl", function($scope) {

		});

		//手机号用户列表控制器
		app.controller("userListCtrl", function($scope, $routeParams, $http) {

			//获取页面参数，保存在作用域中
			$scope.num = parseInt($routeParams.pageNum);

			function newList() {

				//根据pageNum请求数据
				$http({
					url: "/users/indexs#/phoneuserlist/",
					method: "POST",
					dataType: "json",
					data: {
						gets: 1,
						pagenum: $scope.num
					}
				})
				.then(function(data) {
					$scope.allsum = data.data.datasum;
					$scope.pagelists = data.data.result;
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}

			new newList();

			//手机号用户删除功能
			$scope.deletebtn = function(ids) {
				$http({
					url: "/users/indexs#/phoneuserlist/",
					method: "POST",
					dataType:"json",
					data: {
						del: 1,
						ids: ids
					}
				})
				.then(function(data) {
					if(data.data.result == 1) {
						new newList();
					}
				})
				.catch(function(data) {
					console.log("->" + data.data);
				})
			}
		});

		//网站用户列表控制器
		app.controller("usersListCtrl", function($scope, $routeParams, $http) {
			function newLists() {

				//获取页面参数，保存在作用域中
				$scope.num = parseInt($routeParams.pageNum);

				//根据pageNum请求数据
				$http({
					url: "/users/indexs#/phoneuserlist/",
					method: "POST",
					dataType: "json",
					data: {
						gets: 2,
						pagenum: $scope.num
					}
				})
				.then(function(data) {
					$scope.allsums = data.data.datasum;
					$scope.pagelists = data.data.result;
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}
			new newLists();

			//网站用户删除功能
			$scope.deletebtns = function(ids) {
				$http({
					url: "/users/indexs#/webuserlist/",
					method: "POST",
					dataType:"json",
					data: {
						del: 2,
						ids: ids
					}
				})
				.then(function(data) {
					if(data.data.result == 1) {
						new newLists();
					}
				})
				.catch(function(data) {
					console.log("->" + data.data);
				})
			}
		});

		//用户信息控制器
		app.controller("userInfoCtrl", function($scope) {

		});

		//创建文章控制器
		app.controller("createArticleCtrl", function($scope, $http) {

			//文章类型列表
			$scope.btnlist = [
				{
					btn: "JavaScript"
				},
				{
					btn: "NodeJS"
				},
				{
					btn: "Web框架"
				}
			];

			$scope.subArticle = function() {
				var btnsel = 0;
				var indexs = 0;
				for(var i in $scope.btnlist) {
					if($scope.btnlist[i].btnsels == "btnspe") {
						indexs = i;
						btnsel++;
					}
				}

				if($scope.btnspe || btnsel == 1) {
					$http({
						url: "/users/indexs#/createarticle",
						method: "POST",
						dataType: "json",
						data: {
							btnspe: $scope.btnspe,
							btnsel: $scope.btnlist[indexs].btn,
							createart: 1,
							title: $scope.titles,
							author: $scope.authors,
							pre: $scope.pre,
							content: $scope.material.content.content,
							times: (new Date()).getTime()
						}
					})
					.then(function(data) {
						console.log(data);
						$scope.messages = data.data.messages;
						$scope.isShow = true;
					})
					.catch(function(data) {
						console.log(data);
					});
				} else {
					$scope.messages = "请选择文章分类";
					$scope.isShow = false;
				}
			}

			//设置是否为精选文章
			$scope.btnSpe = function() {
				if($scope.btnspe) {
					$scope.btnspe = "";
				} else {
					$scope.btnspe = "btnspe";
				}
			}

			//为文章 添加分类
			$scope.Btnsels = function(items) {
				for(var i in $scope.btnlist) {
					$scope.btnlist[i].btnsels = "";
				}

				items.btnsels = "btnspe";
			}
		});

		//首页banner设置
		app.controller("blogbannersCtrl", function($scope, $http) {

			//读取banner功能
			function ReadBanner() {
				$http({
					url: "#/blogbanners",
					method: "POST",
					dataType: "json",
					data: {
						blogbans: 1
					}
				})
				.then(function(data) {
					$scope.readNum = data.data.arr;
				})
				.catch(function(data) {
					console.log(data);
				});
			}

			new ReadBanner();

			$scope.nums = 0;
			$scope.imgNum = [];
			// $scope.imgNum.push({
			// 	img: $scope.img,
			// 	link: $scope.link
			// });

			//实现添加功能
			$scope.addSome = function() {
				$scope.nums++;
				$scope.imgNum.push({
					img: $scope.nums.img,
					link: $scope.nums.link
				});
			}

			//实现删除功能
			$scope.deleteSome = function() {
				if($scope.nums > 0) {
					$scope.nums--;
					$scope.imgNum.splice($scope.nums, 1);
				}
			}

			//实现删除功能
			$scope.deleteSomes = function(ids) {
				$http({
					url: "#/blogbanners",
					method: "POST",
					dataType: "json",
					data: {
						delbans: 1,
						ids: ids
					}
				})
				.then(function(data) {
					if(data.data.result == 1) {
						new ReadBanner();
					}
				})
				.catch(function(data) {
					console.log(data);
				});
			}

			//实现图片完成功能
			$scope.bannercomplete = function() {
				$http({
					url: "#/blogbanners",
					method: "POST",
					dataType: "json",
					data: {
						addbans: 1,
						oldarr: $scope.readNum,
						newarr: $scope.imgNum
					}
				})
				.then(function(data) {
					$scope.messages = data.data.message;
				})
				.catch(function(data) {
					console.log(data);
				})
			}
		});

		//实现上传banner功能
		app.directive("fileModel", function() {
			return {
				restrict: "A",
				link: function(scope, element, attrs) {
					element.on("change", function(event) {
						var file = this.files[0];
						if(!/image\/\w+/.test(file.type)) {
							alert("不是图像格式");
							return false;
						}
						var reader = new FileReader();

						reader.readAsDataURL(file);
						reader.onload = function(e) {
							drawToCanvas(this.result);
						}

						function drawToCanvas(imgData) {
				            scope.nums.img = imgData;
						}
					});
				}
			}
		});

		//文章信息控制器
		app.controller("articleInfoCtrl", function($scope) {

		});

		//创建文章列表控制器
		app.controller("articleListCtrl", function($scope) {

		});

		// 我的技能控制器
		app.controller("myskillCtrl", function($scope, $http) {

			//存储数据
			$scope.repeatdata = [];

			$scope.showNum = [];
			$scope.num = 1;

			$scope.showNum.push({
				no: $scope.num,
				news: $scope.news
			});

			//添加技能内容栏
			$scope.addskillbtn = function() {
				$scope.num++;
				$scope.showNum.push({
					no: $scope.num,
					news: $scope.news
				});
			}

			//删除技能栏
			$scope.delskillbtn = function() {
				if($scope.num > 1) {
					$scope.num--;
					$scope.showNum.splice($scope.num, 1);
				}
			}

			//实现技能交互
			$scope.completebtns = function() {
				$scope.repeatdata = [];
		        for (var i = 0; i < $scope.showNum.length; i++) {
		        	if($scope.showNum[i].news != undefined) {
		            	$scope.repeatdata.push($scope.showNum[i].news);
		        	}
		        }

		        if($scope.repeatdata.length != 0) {
					$http({
						url: "/users/indexs#/myskill",
						method: "POST",
						dataType: "json",
						data: {
							addskill: 1,
							skilltitle: $scope.skilltitle,
							skillpro: $scope.skillprocess,
							repeatdata: $scope.repeatdata
						}
					})
					.then(function(data) {
						$scope.skillShows = true;
						if(data.data.result == 1) {
							$scope.messages = data.data.message;
						} else if(data.data.result == 0) {
							$scope.skillShows = false;
							$scope.messages = data.data.message;
						}
					})
					.catch(function(data) {
						console.log(data.data);
					});
		        } else {
		        	$scope.skillShows = false;
		        	$scope.messages = "请输入技能名称和技能内容";
		        }
			}
		});

		app.controller("reviseskillCtrl", function($scope, $http, $sce) {
			function showSki() {
				$http({
					url: "#/reviseskill",
					method: "POST",
					type: "json",
					data: {
						showskill: 1
					}
				})
				.then(function(data) {
					$scope.list = data.data.arr;
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}

			new showSki();

			$scope.reviseBtn = function() {
				$http({
					url: "#/reviseskill",
					method: "POST",
					type: "json",
					data: {
						arr: $scope.list,
						reviseskill: 1
					}
				})
				.then(function(data) {
					if(data.data.result == 1) {
						$scope.messages = data.data.message;
					}
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}
		});

		//技能列表控制器
		app.controller("showskillCtrl", function($scope, $http, $sce) {
			function showSki() {
				$http({
					url: "#/showskill",
					method: "POST",
					type: "json",
					data: {
						showskill: 1
					}
				})
				.then(function(data) {

					for(var i = 0; i < data.data.arr.length; i++) {
						data.data.arr[i].cons = $sce.trustAsHtml(data.data.arr[i].cons.replace(/;/g, "<br>"));
					}

					$scope.list = data.data.arr;
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}

			new showSki();

			//删除技能功能
			$scope.deletebtn = function(ids) {
				$http({
					url: "#/showskill",
					method: "POST",
					type: "json",
					data: {
						skidel: 1,
						ids: ids
					}
				})
				.then(function(data) {
					if(data.data.result == 1) {
						new showSki();
					}
				})
				.catch(function(data) {
					console.log(data.data);
				});
			}
		});

		app.controller("headerControl", function($scope, $http, $interval) {
			$scope.date = new Date();

			$interval(function() {
				$scope.date = new Date();
			}, 1000);

			$http({
				url: "/users/indexs",
				method: "POST",
				dataType: "json"
			})
			.then(function(data) {
				$scope.username = data.data.name;
			})
			.catch(function(data) {
				console.log(data.data);
			});
		});
		app.controller("buttonControl", function($scope, $element) {
			$element.on("click", function() {
				if($element.hasClass("active")) {
					$element.removeClass("active");
				} else {
					$element.addClass("active");
				}
			});
		});

		//定义导航控制器
		app.controller("navCtrl", function($scope, $location) {

			//模块的内容
			$scope.list = [
				{
					title: "用户模块",
					childList: [
						{
							title: "手机号用户",
							//对于用户列表，我们发送请求的时候，要携带请求的页码
							link: "#/phoneuserlist/1",
						},
						{
							title: "网站用户",
							//对于用户列表，我们发送请求的时候，要携带请求的页码
							link: "#/webuserlist/1",
						},
						{
							title: "创建用户",
							link: "#/createuser",
						}
					]
				},
				{
					title: "文章模块",
					childList: [
						{
							title: "首页banner",
							link: "#/blogbanners"
						},
						{
							title: "文章列表",
							//对于用户列表，我们发送请求的时候，要携带请求的页码
							link: "#/articlelist/1"
						},
						{
							title: "创建文章",
							link: "#/createarticle"
						}
					]
				},
				{
					title: "Slim。的简历",
					childList: [
						{
							title: "添加技能",
							link: "#/myskill"
						},
						{
							title: "修改技能",
							link: "#/reviseskill"
						},
						{
							title: "技能列表",
							link: "#/showskill"
						}
					]
				}
			];

			//根据路径实现TAB切换
			for(var i in $scope.list) {
				for(var j in $scope.list[i].childList) {
					if($location.$$path == (($scope.list[i].childList[j].link).split("#")[1])) {
						($scope.list[i].childList[j]).classnames = "smalllisel";
					}
				}
			}

			//实现tab切换功能
			$scope.Show = function(shows) {

				//取消所有页面的类名
				for(var i in $scope.list) {
					for(var j in $scope.list[i].childList) {
						$scope.list[i].childList[j].classnames = "";
					}
				}
				shows.classnames = "smalllisel";
			}
		});

		/*实现tab切换*/
		app.controller("formControl", function($scope, $http) {

			//显隐操作
			$scope.showFirst = {
				first: true,
				second: false
			}
			$scope.tabSel = {
				first: true,
				second: false
			}
			$scope.formHide = function(formsHide) {
				for(var i in this.tabSel) {
					this.tabSel[i] = false;
				}
				for(var i in this.showFirst) {
					this.showFirst[i] = false;
				}
				$scope.showFirst[formsHide] = true;
				$scope.tabSel[formsHide] = true;
			}

			//注册交互判断
			$scope.Register = function() {
				if($scope.showFirst.first && $scope.userforms.$valid) {
					$http({
						url: "/users/indexs",
						method: "POST",
						dataType: "json",
						data: {
							newname: $scope.newnames,
							pname: $scope.phonenames,
							ppwd: $scope.phonepwds,
							num: 1
						}
					})
					.then(function(data) {
						$scope.messages = data.data.message;
					})
					.catch(function(data) {
						console.log(data.data);
					});
				} else if($scope.showFirst.second && $scope.webforms.$valid) {
					$http({
						url: "/users/indexs",
						method: "POST",
						dataType: "json",
						data: {
							newname: $scope.newnamess,
							wname: $scope.webnames,
							wpwd: $scope.webpwds,
							num: 2
						}
					})
					.then(function(data) {
						$scope.messages = data.data.message;
					})
					.catch(function(data) {
						console.log(data.data);
					});
				}
			}
		});
		app.directive("pwCheck", function() {
			return {
				require: "ngModel",
				link: function(scope, elem, attrs, ctrl) {
					var firstPassword = "." + attrs.pwCheck;
					elem.addClass(firstPassword).on("input", function() {
						if($(firstPassword).val() != scope.phoneconpwds) {
							scope.isTrue = true;
						} else {
							scope.isTrue = false;
						}
					});
				}
			}
		});
		app.directive("pwChecks", function() {
			return {
				require: "ngModel",
				link: function(scope, elem, attrs, ctrl) {
					var firstPassword = "." + attrs.pwChecks;
					elem.addClass(firstPassword).on("input", function() {
						if($(firstPassword).val() != scope.phoneconpwdss) {
							scope.isTrues = true;
						} else {
							scope.isTrues = false;
						}
					});
				}
			}
		});

		//百度ueditor
		app.factory('Common', [
		  '$http', '$q', function($http, $q) {
			    return {
				    loadScript: function(url, callback) {
				    var head = document.getElementsByTagName("head")[0];
				    var script = document.createElement("script");
				    script.setAttribute("type", "text/javascript");
				    script.setAttribute("src", url);
				    script.setAttribute("async", true);
				    script.setAttribute("defer", true);
				    head.appendChild(script);
				    //fuck ie! duck type
				    if (document.all) {
				      	script.onreadystatechange = function() {
				       	var state = this.readyState;
				       	if (state === 'loaded' || state === 'complete') {
				        	callback && callback();
				       	}
			      	}
			    } else {
			      	//firefox, chrome
			      	script.onload = function() {
			       		callback && callback();
			      	}
			    }
		    },
		    loadCss: function(url) {
			    var ele = document.createElement('link');
			    ele.href = url;
		    	ele.rel = 'stylesheet';
		     	if (ele.onload == null) {
		      		ele.onload = function() {
		      	};
		    } else {
			    ele.onreadystatechange = function() {
			    };
		    }
		    angular.element(document.querySelector('body')).prepend(ele);
		    }
		   }
		  }
		]);

		app.directive('ueditor', [
		  'Common',
		  '$rootScope',
		  function(Common, $rootScope) {
		   return {
		    restrict: 'EA',
		    require: 'ngModel',
		    link: function(scope, ele, attrs, ctrl) {
		     $rootScope.$emit('loading', '初始化编辑器...');//广播loading事件，可以删除
		     var _self = this,
		       _initContent,
		       editor,
		       editorReady = false,
		       base = '', //ueditor目录
		       _id = attrs.ueditor;
		     var editorHandler = {
		      init: function() {
		       window.UEDITOR_HOME_URL = base + '/';
		       var _self = this;
		       if (typeof UE != 'undefined') {
		        	editor = UE.getEditor(_id, {
		         	toolbars: [
			          	[
			           		'fontsize', '|',
				           	'blockquote', 'horizontal', '|',
				           	'removeformat', '|',
				           	'insertimage', '|',
				           	'bold', 'italic', 'underline', 'forecolor', 'backcolor', '|',
				           	'justifyleft', 'justifycenter', 'justifyright', 'justifyjustify',
				           	'rowspacingtop', 'rowspacingbottom', 'lineheight', '|',
				           	'insertorderedlist', 'insertunorderedlist', '|',
				           	'link', 'unlink', '|',
				           	'emotion'
			          	]
		         	]
		        });
		        editor.ready(function() {
		         	editor.setHeight(800);
		         	editorReady = true;
           		 	$rootScope.$emit('loading', '');//编辑器初始化完成
		         	editor.addListener('contentChange', function() {//双向绑定
		          		if (!scope.$$phase) {
			           		scope.$apply(function() {
			            		ctrl.$setViewValue(editor.getContent());
			           		});
			          	}
		         	});
		        });
		       }
		       else {
		        	Common.loadScript(base + '/ueditor.config.js', null);
		        	Common.loadScript(base + '/ueditor.all.min.js', function() {
		        	 	_self.init();
		        	});
		       	}
	        },
	      		setContent: function(content) {
			        if (editor && editorReady) {
			        	editor.setContent(content);
			        }
		      	}
		     };
		     ctrl.$render = function() {
		      	_initContent = ctrl.$isEmpty(ctrl.$viewValue) ? '' : ctrl.$viewValue;
		      editorHandler.setContent(_initContent);//双向绑定
		     };
		     editorHandler.init();
		     // 事件
		     $rootScope.$on('$routeChangeStart', function() {
  				editor && editor.destroy();
		     });
		    }
		   }
		  }
		 ]);
	</script>
</body>
</html>